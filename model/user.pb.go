// Code generated by protoc-gen-go. DO NOT EDIT.
// source: model/user.proto

/*
Package model is a generated protocol buffer package.

It is generated from these files:
	model/user.proto

It has these top-level messages:
	User
	Karyawan
	CreateRequest
	CreateResponse
	AllUsers
	ReadRequest
	ReadResponse
	UpdateRequest
	UpdateResponse
	DeleteRequest
	DeleteResponse
	CreateKaryawanRequest
	CreateKaryawanResponse
	AllKaryawans
	GetKaryawanRequest
	GetKaryawanResponse
	UpdateKaryawanRequest
	UpdateKaryawanResponse
	DeleteKaryawanRequest
	DeleteKaryawanResponse
*/
package model

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/empty"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type User struct {
	Id       int64  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Username string `protobuf:"bytes,2,opt,name=username" json:"username,omitempty"`
	Password string `protobuf:"bytes,3,opt,name=password" json:"password,omitempty"`
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *User) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *User) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *User) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type Karyawan struct {
	Id          int64  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	NamaLengkap string `protobuf:"bytes,2,opt,name=nama_lengkap,json=namaLengkap" json:"nama_lengkap,omitempty"`
	Alamat      string `protobuf:"bytes,3,opt,name=alamat" json:"alamat,omitempty"`
}

func (m *Karyawan) Reset()                    { *m = Karyawan{} }
func (m *Karyawan) String() string            { return proto.CompactTextString(m) }
func (*Karyawan) ProtoMessage()               {}
func (*Karyawan) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Karyawan) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Karyawan) GetNamaLengkap() string {
	if m != nil {
		return m.NamaLengkap
	}
	return ""
}

func (m *Karyawan) GetAlamat() string {
	if m != nil {
		return m.Alamat
	}
	return ""
}

type CreateRequest struct {
	Item *User `protobuf:"bytes,1,opt,name=item" json:"item,omitempty"`
}

func (m *CreateRequest) Reset()                    { *m = CreateRequest{} }
func (m *CreateRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()               {}
func (*CreateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *CreateRequest) GetItem() *User {
	if m != nil {
		return m.Item
	}
	return nil
}

type CreateResponse struct {
	Status  int64  `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	User    *User  `protobuf:"bytes,3,opt,name=user" json:"user,omitempty"`
}

func (m *CreateResponse) Reset()                    { *m = CreateResponse{} }
func (m *CreateResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateResponse) ProtoMessage()               {}
func (*CreateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *CreateResponse) GetStatus() int64 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *CreateResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *CreateResponse) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

type AllUsers struct {
	Message string  `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
	Status  string  `protobuf:"bytes,2,opt,name=status" json:"status,omitempty"`
	User    []*User `protobuf:"bytes,3,rep,name=user" json:"user,omitempty"`
}

func (m *AllUsers) Reset()                    { *m = AllUsers{} }
func (m *AllUsers) String() string            { return proto.CompactTextString(m) }
func (*AllUsers) ProtoMessage()               {}
func (*AllUsers) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *AllUsers) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *AllUsers) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *AllUsers) GetUser() []*User {
	if m != nil {
		return m.User
	}
	return nil
}

type ReadRequest struct {
	Id int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *ReadRequest) Reset()                    { *m = ReadRequest{} }
func (m *ReadRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadRequest) ProtoMessage()               {}
func (*ReadRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *ReadRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type ReadResponse struct {
	User     *User     `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
	Karyawan *Karyawan `protobuf:"bytes,2,opt,name=karyawan" json:"karyawan,omitempty"`
}

func (m *ReadResponse) Reset()                    { *m = ReadResponse{} }
func (m *ReadResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadResponse) ProtoMessage()               {}
func (*ReadResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *ReadResponse) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *ReadResponse) GetKaryawan() *Karyawan {
	if m != nil {
		return m.Karyawan
	}
	return nil
}

type UpdateRequest struct {
	Id   int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	User *User `protobuf:"bytes,2,opt,name=user" json:"user,omitempty"`
}

func (m *UpdateRequest) Reset()                    { *m = UpdateRequest{} }
func (m *UpdateRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateRequest) ProtoMessage()               {}
func (*UpdateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *UpdateRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UpdateRequest) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

type UpdateResponse struct {
	Message string `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
	Status  string `protobuf:"bytes,2,opt,name=status" json:"status,omitempty"`
	User    *User  `protobuf:"bytes,3,opt,name=user" json:"user,omitempty"`
}

func (m *UpdateResponse) Reset()                    { *m = UpdateResponse{} }
func (m *UpdateResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateResponse) ProtoMessage()               {}
func (*UpdateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *UpdateResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *UpdateResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *UpdateResponse) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

type DeleteRequest struct {
	Id int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *DeleteRequest) Reset()                    { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()               {}
func (*DeleteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *DeleteRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type DeleteResponse struct {
	Message string `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
	Status  string `protobuf:"bytes,2,opt,name=status" json:"status,omitempty"`
}

func (m *DeleteResponse) Reset()                    { *m = DeleteResponse{} }
func (m *DeleteResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteResponse) ProtoMessage()               {}
func (*DeleteResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *DeleteResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *DeleteResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type CreateKaryawanRequest struct {
	Karyawan *Karyawan `protobuf:"bytes,2,opt,name=karyawan" json:"karyawan,omitempty"`
}

func (m *CreateKaryawanRequest) Reset()                    { *m = CreateKaryawanRequest{} }
func (m *CreateKaryawanRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateKaryawanRequest) ProtoMessage()               {}
func (*CreateKaryawanRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *CreateKaryawanRequest) GetKaryawan() *Karyawan {
	if m != nil {
		return m.Karyawan
	}
	return nil
}

type CreateKaryawanResponse struct {
	Karyawan *Karyawan `protobuf:"bytes,1,opt,name=karyawan" json:"karyawan,omitempty"`
}

func (m *CreateKaryawanResponse) Reset()                    { *m = CreateKaryawanResponse{} }
func (m *CreateKaryawanResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateKaryawanResponse) ProtoMessage()               {}
func (*CreateKaryawanResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *CreateKaryawanResponse) GetKaryawan() *Karyawan {
	if m != nil {
		return m.Karyawan
	}
	return nil
}

type AllKaryawans struct {
	Karyawan []*Karyawan `protobuf:"bytes,1,rep,name=karyawan" json:"karyawan,omitempty"`
}

func (m *AllKaryawans) Reset()                    { *m = AllKaryawans{} }
func (m *AllKaryawans) String() string            { return proto.CompactTextString(m) }
func (*AllKaryawans) ProtoMessage()               {}
func (*AllKaryawans) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *AllKaryawans) GetKaryawan() []*Karyawan {
	if m != nil {
		return m.Karyawan
	}
	return nil
}

type GetKaryawanRequest struct {
	Id int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *GetKaryawanRequest) Reset()                    { *m = GetKaryawanRequest{} }
func (m *GetKaryawanRequest) String() string            { return proto.CompactTextString(m) }
func (*GetKaryawanRequest) ProtoMessage()               {}
func (*GetKaryawanRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *GetKaryawanRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type GetKaryawanResponse struct {
	Karyawan *Karyawan `protobuf:"bytes,1,opt,name=karyawan" json:"karyawan,omitempty"`
}

func (m *GetKaryawanResponse) Reset()                    { *m = GetKaryawanResponse{} }
func (m *GetKaryawanResponse) String() string            { return proto.CompactTextString(m) }
func (*GetKaryawanResponse) ProtoMessage()               {}
func (*GetKaryawanResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *GetKaryawanResponse) GetKaryawan() *Karyawan {
	if m != nil {
		return m.Karyawan
	}
	return nil
}

type UpdateKaryawanRequest struct {
	Id       int64     `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Karyawan *Karyawan `protobuf:"bytes,2,opt,name=karyawan" json:"karyawan,omitempty"`
}

func (m *UpdateKaryawanRequest) Reset()                    { *m = UpdateKaryawanRequest{} }
func (m *UpdateKaryawanRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateKaryawanRequest) ProtoMessage()               {}
func (*UpdateKaryawanRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *UpdateKaryawanRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UpdateKaryawanRequest) GetKaryawan() *Karyawan {
	if m != nil {
		return m.Karyawan
	}
	return nil
}

type UpdateKaryawanResponse struct {
	Karyawan *Karyawan `protobuf:"bytes,1,opt,name=karyawan" json:"karyawan,omitempty"`
}

func (m *UpdateKaryawanResponse) Reset()                    { *m = UpdateKaryawanResponse{} }
func (m *UpdateKaryawanResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateKaryawanResponse) ProtoMessage()               {}
func (*UpdateKaryawanResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *UpdateKaryawanResponse) GetKaryawan() *Karyawan {
	if m != nil {
		return m.Karyawan
	}
	return nil
}

type DeleteKaryawanRequest struct {
	Id int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *DeleteKaryawanRequest) Reset()                    { *m = DeleteKaryawanRequest{} }
func (m *DeleteKaryawanRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteKaryawanRequest) ProtoMessage()               {}
func (*DeleteKaryawanRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *DeleteKaryawanRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type DeleteKaryawanResponse struct {
	Message string `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
	Status  string `protobuf:"bytes,2,opt,name=status" json:"status,omitempty"`
}

func (m *DeleteKaryawanResponse) Reset()                    { *m = DeleteKaryawanResponse{} }
func (m *DeleteKaryawanResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteKaryawanResponse) ProtoMessage()               {}
func (*DeleteKaryawanResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *DeleteKaryawanResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *DeleteKaryawanResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func init() {
	proto.RegisterType((*User)(nil), "model.User")
	proto.RegisterType((*Karyawan)(nil), "model.Karyawan")
	proto.RegisterType((*CreateRequest)(nil), "model.CreateRequest")
	proto.RegisterType((*CreateResponse)(nil), "model.CreateResponse")
	proto.RegisterType((*AllUsers)(nil), "model.AllUsers")
	proto.RegisterType((*ReadRequest)(nil), "model.ReadRequest")
	proto.RegisterType((*ReadResponse)(nil), "model.ReadResponse")
	proto.RegisterType((*UpdateRequest)(nil), "model.UpdateRequest")
	proto.RegisterType((*UpdateResponse)(nil), "model.UpdateResponse")
	proto.RegisterType((*DeleteRequest)(nil), "model.DeleteRequest")
	proto.RegisterType((*DeleteResponse)(nil), "model.DeleteResponse")
	proto.RegisterType((*CreateKaryawanRequest)(nil), "model.CreateKaryawanRequest")
	proto.RegisterType((*CreateKaryawanResponse)(nil), "model.CreateKaryawanResponse")
	proto.RegisterType((*AllKaryawans)(nil), "model.AllKaryawans")
	proto.RegisterType((*GetKaryawanRequest)(nil), "model.GetKaryawanRequest")
	proto.RegisterType((*GetKaryawanResponse)(nil), "model.GetKaryawanResponse")
	proto.RegisterType((*UpdateKaryawanRequest)(nil), "model.UpdateKaryawanRequest")
	proto.RegisterType((*UpdateKaryawanResponse)(nil), "model.UpdateKaryawanResponse")
	proto.RegisterType((*DeleteKaryawanRequest)(nil), "model.DeleteKaryawanRequest")
	proto.RegisterType((*DeleteKaryawanResponse)(nil), "model.DeleteKaryawanResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for UserService service

type UserServiceClient interface {
	GetUsers(ctx context.Context, in *google_protobuf.Empty, opts ...grpc.CallOption) (*AllUsers, error)
	Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error)
	Read(ctx context.Context, in *ReadRequest, opts ...grpc.CallOption) (*ReadResponse, error)
	Update(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*UpdateResponse, error)
	Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*DeleteResponse, error)
}

type userServiceClient struct {
	cc *grpc.ClientConn
}

func NewUserServiceClient(cc *grpc.ClientConn) UserServiceClient {
	return &userServiceClient{cc}
}

func (c *userServiceClient) GetUsers(ctx context.Context, in *google_protobuf.Empty, opts ...grpc.CallOption) (*AllUsers, error) {
	out := new(AllUsers)
	err := grpc.Invoke(ctx, "/model.UserService/GetUsers", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error) {
	out := new(CreateResponse)
	err := grpc.Invoke(ctx, "/model.UserService/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) Read(ctx context.Context, in *ReadRequest, opts ...grpc.CallOption) (*ReadResponse, error) {
	out := new(ReadResponse)
	err := grpc.Invoke(ctx, "/model.UserService/Read", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) Update(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*UpdateResponse, error) {
	out := new(UpdateResponse)
	err := grpc.Invoke(ctx, "/model.UserService/Update", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*DeleteResponse, error) {
	out := new(DeleteResponse)
	err := grpc.Invoke(ctx, "/model.UserService/Delete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for UserService service

type UserServiceServer interface {
	GetUsers(context.Context, *google_protobuf.Empty) (*AllUsers, error)
	Create(context.Context, *CreateRequest) (*CreateResponse, error)
	Read(context.Context, *ReadRequest) (*ReadResponse, error)
	Update(context.Context, *UpdateRequest) (*UpdateResponse, error)
	Delete(context.Context, *DeleteRequest) (*DeleteResponse, error)
}

func RegisterUserServiceServer(s *grpc.Server, srv UserServiceServer) {
	s.RegisterService(&_UserService_serviceDesc, srv)
}

func _UserService_GetUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(google_protobuf.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).GetUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/model.UserService/GetUsers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).GetUsers(ctx, req.(*google_protobuf.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/model.UserService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).Create(ctx, req.(*CreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/model.UserService/Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).Read(ctx, req.(*ReadRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/model.UserService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).Update(ctx, req.(*UpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/model.UserService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).Delete(ctx, req.(*DeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "model.UserService",
	HandlerType: (*UserServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetUsers",
			Handler:    _UserService_GetUsers_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _UserService_Create_Handler,
		},
		{
			MethodName: "Read",
			Handler:    _UserService_Read_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _UserService_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _UserService_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "model/user.proto",
}

// Client API for KaryawanService service

type KaryawanServiceClient interface {
	GetKaryawans(ctx context.Context, in *google_protobuf.Empty, opts ...grpc.CallOption) (*AllKaryawans, error)
	CreateKaryawan(ctx context.Context, in *CreateKaryawanRequest, opts ...grpc.CallOption) (*CreateKaryawanResponse, error)
	ReadKaryawan(ctx context.Context, in *GetKaryawanRequest, opts ...grpc.CallOption) (*GetKaryawanResponse, error)
	UpdateKaryawan(ctx context.Context, in *UpdateKaryawanRequest, opts ...grpc.CallOption) (*UpdateKaryawanResponse, error)
	DeleteKaryawan(ctx context.Context, in *DeleteKaryawanRequest, opts ...grpc.CallOption) (*DeleteKaryawanResponse, error)
}

type karyawanServiceClient struct {
	cc *grpc.ClientConn
}

func NewKaryawanServiceClient(cc *grpc.ClientConn) KaryawanServiceClient {
	return &karyawanServiceClient{cc}
}

func (c *karyawanServiceClient) GetKaryawans(ctx context.Context, in *google_protobuf.Empty, opts ...grpc.CallOption) (*AllKaryawans, error) {
	out := new(AllKaryawans)
	err := grpc.Invoke(ctx, "/model.KaryawanService/GetKaryawans", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *karyawanServiceClient) CreateKaryawan(ctx context.Context, in *CreateKaryawanRequest, opts ...grpc.CallOption) (*CreateKaryawanResponse, error) {
	out := new(CreateKaryawanResponse)
	err := grpc.Invoke(ctx, "/model.KaryawanService/CreateKaryawan", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *karyawanServiceClient) ReadKaryawan(ctx context.Context, in *GetKaryawanRequest, opts ...grpc.CallOption) (*GetKaryawanResponse, error) {
	out := new(GetKaryawanResponse)
	err := grpc.Invoke(ctx, "/model.KaryawanService/ReadKaryawan", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *karyawanServiceClient) UpdateKaryawan(ctx context.Context, in *UpdateKaryawanRequest, opts ...grpc.CallOption) (*UpdateKaryawanResponse, error) {
	out := new(UpdateKaryawanResponse)
	err := grpc.Invoke(ctx, "/model.KaryawanService/UpdateKaryawan", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *karyawanServiceClient) DeleteKaryawan(ctx context.Context, in *DeleteKaryawanRequest, opts ...grpc.CallOption) (*DeleteKaryawanResponse, error) {
	out := new(DeleteKaryawanResponse)
	err := grpc.Invoke(ctx, "/model.KaryawanService/DeleteKaryawan", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for KaryawanService service

type KaryawanServiceServer interface {
	GetKaryawans(context.Context, *google_protobuf.Empty) (*AllKaryawans, error)
	CreateKaryawan(context.Context, *CreateKaryawanRequest) (*CreateKaryawanResponse, error)
	ReadKaryawan(context.Context, *GetKaryawanRequest) (*GetKaryawanResponse, error)
	UpdateKaryawan(context.Context, *UpdateKaryawanRequest) (*UpdateKaryawanResponse, error)
	DeleteKaryawan(context.Context, *DeleteKaryawanRequest) (*DeleteKaryawanResponse, error)
}

func RegisterKaryawanServiceServer(s *grpc.Server, srv KaryawanServiceServer) {
	s.RegisterService(&_KaryawanService_serviceDesc, srv)
}

func _KaryawanService_GetKaryawans_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(google_protobuf.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KaryawanServiceServer).GetKaryawans(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/model.KaryawanService/GetKaryawans",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KaryawanServiceServer).GetKaryawans(ctx, req.(*google_protobuf.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _KaryawanService_CreateKaryawan_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateKaryawanRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KaryawanServiceServer).CreateKaryawan(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/model.KaryawanService/CreateKaryawan",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KaryawanServiceServer).CreateKaryawan(ctx, req.(*CreateKaryawanRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _KaryawanService_ReadKaryawan_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetKaryawanRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KaryawanServiceServer).ReadKaryawan(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/model.KaryawanService/ReadKaryawan",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KaryawanServiceServer).ReadKaryawan(ctx, req.(*GetKaryawanRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _KaryawanService_UpdateKaryawan_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateKaryawanRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KaryawanServiceServer).UpdateKaryawan(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/model.KaryawanService/UpdateKaryawan",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KaryawanServiceServer).UpdateKaryawan(ctx, req.(*UpdateKaryawanRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _KaryawanService_DeleteKaryawan_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteKaryawanRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KaryawanServiceServer).DeleteKaryawan(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/model.KaryawanService/DeleteKaryawan",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KaryawanServiceServer).DeleteKaryawan(ctx, req.(*DeleteKaryawanRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _KaryawanService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "model.KaryawanService",
	HandlerType: (*KaryawanServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetKaryawans",
			Handler:    _KaryawanService_GetKaryawans_Handler,
		},
		{
			MethodName: "CreateKaryawan",
			Handler:    _KaryawanService_CreateKaryawan_Handler,
		},
		{
			MethodName: "ReadKaryawan",
			Handler:    _KaryawanService_ReadKaryawan_Handler,
		},
		{
			MethodName: "UpdateKaryawan",
			Handler:    _KaryawanService_UpdateKaryawan_Handler,
		},
		{
			MethodName: "DeleteKaryawan",
			Handler:    _KaryawanService_DeleteKaryawan_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "model/user.proto",
}

func init() { proto.RegisterFile("model/user.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 742 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x95, 0x5b, 0x4f, 0x13, 0x41,
	0x14, 0xc7, 0xb3, 0x2d, 0xd4, 0x72, 0x5a, 0x16, 0x32, 0xa5, 0x4d, 0x59, 0x21, 0xe0, 0xc4, 0x28,
	0xa9, 0x49, 0x6b, 0xea, 0x1b, 0xbe, 0x88, 0x40, 0x88, 0x97, 0x68, 0x52, 0xe5, 0xc5, 0x48, 0xcc,
	0xc0, 0x8e, 0x75, 0xc3, 0xde, 0xdc, 0xd9, 0x4a, 0x88, 0xf1, 0xc5, 0x47, 0x5f, 0xfd, 0x68, 0x7e,
	0x05, 0xbf, 0x83, 0xaf, 0x66, 0xae, 0xec, 0x6e, 0xbb, 0x12, 0xea, 0xe3, 0x9c, 0x73, 0xf6, 0xf7,
	0x3f, 0x97, 0x99, 0xb3, 0xb0, 0x1a, 0x44, 0x2e, 0xf5, 0x07, 0x13, 0x46, 0x93, 0x7e, 0x9c, 0x44,
	0x69, 0x84, 0x16, 0x85, 0xc5, 0xb9, 0x3d, 0x8e, 0xa2, 0xb1, 0x4f, 0x07, 0xc2, 0x78, 0x3a, 0xf9,
	0x38, 0xa0, 0x41, 0x9c, 0x5e, 0xca, 0x18, 0x67, 0x43, 0x39, 0x49, 0xec, 0x0d, 0x48, 0x18, 0x46,
	0x29, 0x49, 0xbd, 0x28, 0x64, 0xd2, 0x8b, 0x5f, 0xc1, 0xc2, 0x31, 0xa3, 0x09, 0xb2, 0xa1, 0xe2,
	0xb9, 0x5d, 0x6b, 0xdb, 0xda, 0xa9, 0x8e, 0x2a, 0x9e, 0x8b, 0x1c, 0xa8, 0x73, 0x9d, 0x90, 0x04,
	0xb4, 0x5b, 0xd9, 0xb6, 0x76, 0x96, 0x46, 0xe6, 0xcc, 0x7d, 0x31, 0x61, 0xec, 0x22, 0x4a, 0xdc,
	0x6e, 0x55, 0xfa, 0xf4, 0x19, 0x1f, 0x43, 0xfd, 0x05, 0x49, 0x2e, 0xc9, 0x05, 0x09, 0xa7, 0x98,
	0x77, 0xa0, 0x19, 0x92, 0x80, 0x7c, 0xf0, 0x69, 0x38, 0x3e, 0x27, 0xb1, 0xe2, 0x36, 0xb8, 0xed,
	0xa5, 0x34, 0xa1, 0x0e, 0xd4, 0x88, 0x4f, 0x02, 0x92, 0x2a, 0xb0, 0x3a, 0xe1, 0x87, 0xb0, 0xbc,
	0x9f, 0x50, 0x92, 0xd2, 0x11, 0xfd, 0x3c, 0xa1, 0x2c, 0x45, 0x5b, 0xb0, 0xe0, 0xa5, 0x34, 0x10,
	0xf4, 0xc6, 0xb0, 0xd1, 0x17, 0x8d, 0xe8, 0xf3, 0x52, 0x46, 0xc2, 0x81, 0xcf, 0xc0, 0xd6, 0x5f,
	0xb0, 0x38, 0x0a, 0x19, 0xe5, 0x6c, 0x96, 0x92, 0x74, 0xc2, 0x54, 0x4a, 0xea, 0x84, 0xba, 0x70,
	0x2b, 0xa0, 0x8c, 0x91, 0xb1, 0xae, 0x54, 0x1f, 0xb9, 0x08, 0x2f, 0x5a, 0xe4, 0x52, 0x14, 0xe1,
	0x0e, 0x7c, 0x02, 0xf5, 0x3d, 0xdf, 0xe7, 0x86, 0x1c, 0xc6, 0xca, 0x63, 0xae, 0x84, 0x25, 0x5f,
	0x0b, 0x5f, 0xe1, 0xab, 0xb3, 0xf1, 0x9b, 0xd0, 0x18, 0x51, 0xe2, 0xea, 0x9a, 0x0b, 0xfd, 0xc4,
	0xef, 0xa1, 0x29, 0xdd, 0xaa, 0x40, 0xcd, 0xb3, 0x4a, 0xd2, 0x45, 0x0f, 0xa0, 0x7e, 0xae, 0x86,
	0x23, 0x52, 0x69, 0x0c, 0x57, 0x54, 0x90, 0x9e, 0xd9, 0xc8, 0x04, 0xe0, 0x27, 0xb0, 0x7c, 0x1c,
	0xbb, 0x99, 0x96, 0x17, 0xc7, 0xa9, 0xe5, 0x2a, 0x65, 0xdd, 0x39, 0x03, 0x5b, 0x13, 0x54, 0x86,
	0xff, 0xd3, 0xa3, 0x12, 0x91, 0x2d, 0x58, 0x3e, 0xa0, 0x3e, 0x2d, 0x4d, 0x13, 0x3f, 0x05, 0x5b,
	0x07, 0xcc, 0x9b, 0x05, 0x3e, 0x80, 0xb6, 0xbc, 0x4c, 0xa6, 0x4f, 0x4a, 0xec, 0x46, 0x1d, 0x3d,
	0x84, 0x4e, 0x91, 0xa2, 0x32, 0xca, 0x62, 0xac, 0xeb, 0x30, 0x8f, 0xa1, 0xb9, 0xe7, 0xfb, 0xda,
	0xc1, 0x0a, 0x1f, 0x57, 0xff, 0xfd, 0xf1, 0x5d, 0x40, 0x47, 0x34, 0x2d, 0x96, 0x31, 0xdd, 0xb3,
	0x56, 0x2e, 0x6a, 0x9e, 0x34, 0xdf, 0x42, 0x5b, 0x4e, 0xff, 0x1a, 0xb1, 0x1b, 0xf7, 0xb0, 0x48,
	0x9d, 0x27, 0xb9, 0xfb, 0xd0, 0x96, 0x97, 0xe2, 0xba, 0x4e, 0x3c, 0x87, 0x4e, 0x31, 0x70, 0xde,
	0x5b, 0x34, 0xfc, 0x51, 0x85, 0x06, 0xbf, 0xb9, 0x6f, 0x68, 0xf2, 0xc5, 0x3b, 0xa3, 0x68, 0x1f,
	0xea, 0x47, 0x34, 0x95, 0xdb, 0xa3, 0xd3, 0x97, 0x6b, 0xba, 0xaf, 0x77, 0x78, 0xff, 0x90, 0xef,
	0x70, 0x47, 0xd7, 0xa0, 0xd7, 0x0c, 0xb6, 0xbf, 0xff, 0xfa, 0xfd, 0xb3, 0x52, 0x47, 0x35, 0xf1,
	0x1f, 0x60, 0xe8, 0x08, 0x6a, 0xf2, 0x52, 0xa1, 0x35, 0x15, 0x9a, 0x5b, 0x94, 0x4e, 0xbb, 0x60,
	0x95, 0xd9, 0xe3, 0x55, 0x81, 0x01, 0xbc, 0x28, 0x30, 0xbb, 0x56, 0x0f, 0xed, 0xc3, 0x02, 0xdf,
	0x26, 0x08, 0xa9, 0x0f, 0x32, 0x9b, 0xc7, 0x69, 0xe5, 0x6c, 0x0a, 0x81, 0x04, 0xa2, 0x89, 0x40,
	0x20, 0x06, 0x5f, 0x3d, 0xf7, 0x1b, 0x3a, 0x81, 0x9a, 0x1c, 0x8f, 0xc9, 0x26, 0xb7, 0x43, 0x4c,
	0x36, 0xf9, 0xbd, 0x80, 0xef, 0x09, 0xd4, 0xb6, 0x93, 0x41, 0xed, 0x5a, 0xbd, 0x77, 0x2b, 0xc3,
	0xbc, 0x01, 0x3d, 0x83, 0x9a, 0x9c, 0x86, 0xc1, 0xe7, 0xde, 0xbe, 0xc1, 0xe7, 0x1f, 0xbc, 0xce,
	0xb4, 0x97, 0xa1, 0x0d, 0xff, 0x54, 0x61, 0x45, 0xcf, 0x54, 0x0f, 0xe4, 0x35, 0x34, 0x33, 0xd7,
	0xbe, 0x7c, 0x28, 0xad, 0xab, 0xa1, 0x98, 0xe0, 0x4c, 0x3b, 0xce, 0x0d, 0xc0, 0xfc, 0x84, 0xcc,
	0x3f, 0x71, 0x23, 0x37, 0x8e, 0xc2, 0xed, 0x73, 0x36, 0x4b, 0xbc, 0xaa, 0x8e, 0x35, 0x21, 0x61,
	0xe3, 0x25, 0x23, 0xc1, 0x9b, 0x72, 0x22, 0x7f, 0x03, 0x46, 0x62, 0x5d, 0x41, 0xa6, 0xdf, 0xb9,
	0xe3, 0xcc, 0x72, 0x29, 0x78, 0x47, 0xc0, 0x57, 0x91, 0x6d, 0xe0, 0x72, 0xa4, 0x9f, 0xf4, 0x16,
	0x9f, 0xaa, 0x61, 0xe6, 0xf3, 0x36, 0x35, 0xcc, 0x7e, 0xa6, 0x78, 0x5d, 0xc8, 0xb4, 0x9c, 0x82,
	0x0c, 0x2f, 0x84, 0xea, 0x4d, 0x3d, 0xa5, 0x34, 0xf3, 0xad, 0x1a, 0xa5, 0xd9, 0x0f, 0x54, 0x17,
	0xd4, 0x2b, 0x28, 0x9d, 0xd6, 0xc4, 0x34, 0x1f, 0xfd, 0x0d, 0x00, 0x00, 0xff, 0xff, 0xb6, 0xa0,
	0x97, 0xa7, 0x4f, 0x09, 0x00, 0x00,
}
